// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  name           String    @default(cuid())
  email          String    @unique
  emailVerified  DateTime? @map("email_verified")
  image          String?
  role           Role      @default(USER)

  accounts       Account[]
  sessions       Session[]
}

enum Role {
  ADMIN
  USER
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   @map("refresh_token")
  access_token       String?   @map("access_token")
  expires_at         Int?      @map("expires_at")
  token_type         String?   @map("token_type")
  scope              String?
  id_token           String?   @map("id_token")
  session_state      String?   @map("session_state")
  oauth_token_secret String?   @map("oauth_token_secret")
  oauth_token        String?   @map("oauth_token")

  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique  @map("session_token")
  userId       String    @map("user_id")
  expires      DateTime

  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
}
